/*---------------------------------
* sec-round
-----------------------------------*/
.sec-round {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
	.full-height {
	  height: 100%;
	}
	.round-item {
		float: left;
		width: 20%;
		height: 100%;
		box-sizing: border-box;
		border-right: 1px solid rgba(153, 153, 153, 0.11);
		height: 100%;
		position: relative;
	  	&:first-child {
	  		border-left: 1px solid rgba(153, 153, 153, 0.11);
		}
	}
}


/* ----------------------
*	Box shadow
---------------------------*/
.box-shadow-lg {
	box-shadow: 0px 30px 60px 0px rgba(38, 59, 94, 0.1);
}
.box-shadow {
	box-shadow: 0px 3px 10px 0px rgba(38, 59, 94, 0.1);
}
.box-shadow-hover {
	box-shadow: 0px 3px 10px 0px rgba(38, 59, 94, 0.1);
	&:hover {
		box-shadow: 0px 30px 60px 0px rgba(38, 59, 94, 0.1);
	}
}
.box-shadow-only-hover {
	&:hover {
		box-shadow: 0px 30px 60px 0px rgba(38, 59, 94, 0.1);
	}
}

.border-radius-50 {
	border-radius: 50% ;
}

/* ----------------------
*	Opacity
---------------------------*/
@for $i from 1 through 9 {
	.opacity-#{$i} {
		opacity: #{$i / 10};
	}
}

/* ----------------------
*	transeition
---------------------------*/
.transition  {
	@include transition(ease-in-out all 0.35s);
}

/* ----------------------
*	Image Hover
---------------------------*/
.img-hover {
	.img-hover-in {
		overflow: hidden;
		img {
			@include transition(ease-in-out all 0.33s);
			@include scale(1);
		}
	}
	&:hover {
		.img-hover-in {
			img {
				@include scale(1.1);
			}
		}
	}
}
/* ----------------------
*	Top Hover
---------------------------*/
.hover-top {
	position: relative;
	top: 0;
	&:hover {
		top:-10px;
	}
}

/* ----------------------
*	Grayscale Hover
---------------------------*/
.grayscale {
	-webkit-filter: grayscale(100%);
    filter: grayscale(100%);
}
.grayscale-hover {
	img {
		-webkit-filter: grayscale(100%);
	    filter: grayscale(100%);
	}
	&:hover {
		img {
			-webkit-filter: grayscale(0);
		    filter: grayscale(0);
		    opacity: 1;
		}	
	}
}


.font-alt {
	font-family: $px-font-alt;
}

/*	Property
---------------------------*/
.bg-cover {
	background-size: cover;
}
.bg-no-repeat {
 	background-repeat: no-repeat;
 }
.bg-fixed {
 	background-attachment: fixed;
}
.bg-center {
	background-position: center;
} 

/* Letter spacing
-------------------------------*/
@for $i from 1 through 10 {
	.letter-spacing-#{$i} {
		letter-spacing: #{$i}px;
	}
}

/* Height Width
--------------------*/
.max-w-100 {
	max-width: 100%;
}

.full-screen {
	min-height: 100vh;
}

// Margin Padding mixin
$mp-name: (
	"m":"margin",
	"p":"padding",
);
$mp-position: (
	"t":"top",
	"l":"left",
	"r":"right",
	"b":"bottom",
);
@mixin spacing($brksize: normal) {
	@for $i from 0 through 20 {
		@each $n-name, $n-value in $mp-name {
			@if $brksize == normal{
				.#{$n-name}-#{$i*.5}rem{
					#{$n-value}: #{$i*.5}rem;
				}
				.#{$n-name}-#{$i*.5}rem-tb{
					#{$n-value}-top: #{$i*.5}rem;
					#{$n-value}-bottom: #{$i*.5}rem;
				}
				.#{$n-name}-#{$i*.5}rem-lr{
					#{$n-value}-left: #{$i*.5}rem;
					#{$n-value}-right: #{$i*.5}rem;
				}
			}

			@if $brksize == sm{
				.sm-#{$n-name}-#{$i*.5}rem{
					#{$n-value}: #{$i*.5}rem;
				}
				.sm-#{$n-name}-#{$i*.5}rem-tb{
					#{$n-value}-top: #{$i*.5}rem;
					#{$n-value}-bottom: #{$i*.5}rem;
				}
				.sm-#{$n-name}-#{$i*.5}rem-lr{
					#{$n-value}-left: #{$i*.5}rem;
					#{$n-value}-right: #{$i*.5}rem;
				}
			}

			@if $brksize == md{
				.md-#{$n-name}-#{$i*.5}rem{
					#{$n-value}: #{$i*.5}rem;
				}
				.md-#{$n-name}-#{$i*.5}rem-tb{
					#{$n-value}-top: #{$i*.5}rem;
					#{$n-value}-bottom: #{$i*.5}rem;
				}
				.md-#{$n-name}-#{$i*.5}rem-lr{
					#{$n-value}-left: #{$i*.5}rem;
					#{$n-value}-right: #{$i*.5}rem;
				}
			}

			@if $brksize == lg{
				.lg-#{$n-name}-#{$i*.5}rem{
					#{$n-value}: #{$i*.5}rem;
				}
				.lg-#{$n-name}-#{$i*.5}rem-tb{
					#{$n-value}-top: #{$i*.5}rem;
					#{$n-value}-bottom: #{$i*.5}rem;
				}
				.lg-#{$n-name}-#{$i*.5}rem-lr{
					#{$n-value}-left: #{$i*.5}rem;
					#{$n-value}-right: #{$i*.5}rem;
				}
			}

			@each $p-name, $p-value in $mp-position {
				@if $brksize == normal{
					.#{$n-name}-#{$i*.5}rem-#{$p-name}{
						#{$n-value}-#{$p-value}: #{$i*.5}rem;
					}
				}
				@if $brksize == sm {
					.sm-#{$n-name}-#{$i*.5}rem-#{$p-name}{
						#{$n-value}-#{$p-value}: #{$i*.5}rem;
					}	
				}
				@if $brksize == md {
					.md-#{$n-name}-#{$i*.5}rem-#{$p-name}{
						#{$n-value}-#{$p-value}: #{$i*.5}rem;
					}	
				}
				@if $brksize == lg {
					.lg-#{$n-name}-#{$i*.5}rem-#{$p-name}{
						#{$n-value}-#{$p-value}: #{$i*.5}rem;
					}
				}
			}
		}
	}
}

/* Margin Padding
--------------------*/
@include spacing(normal);

@include down-lg {
	/* Margin Padding
	--------------------*/
	@include spacing(lg);
}
@include down-md {
	/* Margin Padding
	--------------------*/
	@include spacing(md);
}
@include down-sm {
	/* Margin Padding
	--------------------*/
	@include spacing(sm);
}